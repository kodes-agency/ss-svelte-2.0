/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n    query AboutPage($locale: I18NLocaleCode) {\n      aboutPage(locale: $locale) {\n        data {\n          attributes {\n            aboutPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.AboutPageDocument,
    "\n    query B2BPage($locale: I18NLocaleCode) {\n      b2BPage(locale: $locale) {\n        data {\n          attributes {\n            b2bPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on Error {\n                code\n                message\n              }\n            }\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n          }\n        }\n      }\n      contactForm(locale: $locale) {\n        data {\n          attributes {\n            contactNameField\n            companyNameField\n            businessActivity\n            privatePerson\n            company\n            horeca\n            interests\n            whiteWines\n            redWines\n            roseWines\n            collectionWines\n            visits\n            knowledge\n            curentOffering\n            phoneNumber\n            email\n            yes\n            no\n            chooseOption\n            formHeading\n            buttonTextSend\n            thankYouHeading\n            thankYouSubheading\n            thankYouButton\n            locale\n          }\n        }\n      }\n    }\n  ": types.B2BPageDocument,
    "\n    query CellerPage($locale: I18NLocaleCode) {\n      cellerPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            cellerPageLayout {\n              __typename\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on ComponentGlobalImage {\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n                id\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.CellerPageDocument,
    "\n    query DiariesCollection($locale: I18NLocaleCode) {\n      diaries(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }    \n\n    }\n  ": types.DiariesCollectionDocument,
    "\n    query DiariesSingle($filters: DiaryFiltersInput, $locale: I18NLocaleCode) {\n      diaries(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.DiariesSingleDocument,
    "\n    query ProductFilters($locale: I18NLocaleCode, $pagination: PaginationArg) {\n      products(locale: $locale, pagination: $pagination) {\n        data {\n          attributes {\n            productType {\n              data {\n                attributes {\n                  productType\n                  filterName\n                }\n              }\n            }\n            wine {\n              volume\n              vintage\n              vina {\n                data {\n                  attributes {\n                    wineType {\n                      data {\n                        attributes {\n                          wineType\n                          filterName\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.ProductFiltersDocument,
    "\n    query GdprPage($locale: I18NLocaleCode) {\n      gdprPage(locale: $locale) {\n        data {\n          attributes {\n            pageContent\n            pageHeading\n          }\n        }\n      }\n    }\n  ": types.GdprPageDocument,
    "\n    query HomePage($locale: I18NLocaleCode) {\n      homePage(locale: $locale) {\n        data {\n          attributes {\n            aboutButton\n            aboutImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            aboutText\n            diaryHeading\n            featuredButton\n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n            featuredWines {\n              data {\n                attributes {\n                  name\n                  slug\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                  harvestYear\n                }\n              }\n            }\n            featuredWinesHeading\n            featuredWinesSubheading\n            heroHeading\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            heroSubheading\n            newsHeading\n            imgLink {\n              link\n              text\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n            imgLink2 {\n              text\n              link\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.HomePageDocument,
    "\n    query Menu($locale: I18NLocaleCode) {\n      menu(locale: $locale) {\n        data {\n          attributes {\n            wineEstate\n            ourWines\n            contactUs\n            aboutUs\n            vinyardLink\n            linkCeller\n            linkVisits\n            linkWhites\n            linkReds\n            linkRoses\n            linkCollections\n            linkB2b\n            linkContact\n            linkPhilosophy\n            linkHistory\n            linkTeam\n            linkDiary\n            linkNews\n            linkGDPR\n            linkPolicy\n            linkVinyard\n          }\n        }\n      }\n      contactPage(locale: $locale) {\n        data {\n          attributes {\n            addressLine1\n            addressLine2\n            addressLine3\n            email\n            phoneNumber\n            heroHeading\n            website\n          }\n        }\n      }\n    }\n  ": types.MenuDocument,
    "\n    query NewsCollection($locale: I18NLocaleCode) {\n      news(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.NewsCollectionDocument,
    "\n    query NewsSingle($locale: I18NLocaleCode, $filters: NewFiltersInput) {\n      news(locale: $locale, filters: $filters) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.NewsSingleDocument,
    "\n    query Policy($locale: I18NLocaleCode) {\n      policy(locale: $locale) {\n        data {\n          attributes {\n            pageHeading\n            content\n          }\n        }\n      }\n    }\n  ": types.PolicyDocument,
    "\n    query Product(\n      $locale: I18NLocaleCode\n      $pagination: PaginationArg,\n      $filters: ProductFiltersInput\n    ) {\n      products(locale: $locale, pagination: $pagination, filters: $filters) {\n        data {\n          attributes {\n            packageTitle\n            productType {\n              data {\n                attributes {\n                  productType\n                }\n              }\n            }\n            regularPrice\n            salePrice\n            slug\n            productCode\n            wine {\n              quantity\n              vintage\n              volume\n              vina {\n                data {\n                  attributes {\n                    name\n                    image {\n                      data {\n                        attributes {\n                          alternativeText\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      shopPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n            deliveryInfoButton\n            paymentInfoButton\n            infoTab {\n              tabContent\n              tabHeading\n            }\n            filterWineType\n            filterVintage\n            filterProductType\n            filterVolume\n          }\n        }\n      }\n      productTypes(locale: $locale) {\n        data {\n          attributes {\n            productType\n          }\n        }\n      }\n    }\n  ": types.ProductDocument,
    "\n    query VinyardPage($locale: I18NLocaleCode) {\n      vinyardPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            vinyardPageLayout {\n              __typename              \n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.VinyardPageDocument,
    "\n    query VisitsPage($locale: I18NLocaleCode) {\n      visitsPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            visitsPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  ": types.VisitsPageDocument,
    "\n    query CollectionPage($locale: I18NLocaleCode, $filters: VinaFiltersInput, $pagination: PaginationArg) {\n      vinas(locale: $locale, filters: $filters, pagination: $pagination) {\n        data {\n          attributes {\n            harvestYear\n            slug\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            shortDescription\n            name\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      winesPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            hideFilters\n            showFilters\n          }\n        }\n      }\n      wineTypes(locale: $locale) {\n        data {\n          attributes {\n            filterName\n            wineType\n          }\n        }\n      }\n    }\n  ": types.CollectionPageDocument,
    "\n    query Vinas($filters: VinaFiltersInput, $locale: I18NLocaleCode) {\n      vinas(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            name\n            harvestYear\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            longDescription\n            shortDescription\n            wineAwards {\n              awardDescription\n              year\n              id\n            }\n            wineDetails {\n              acids\n              alchohol\n              closing {\n                data {\n                  attributes {\n                    capType\n                  }\n                }\n              }\n              id\n              sugars\n              temperatureC\n              temperatureF\n              volumeNCount {\n                bottlesProduced\n                volume\n                id\n              }\n              year\n            }\n            wineInformation {\n              degustaion\n              food\n              maturation\n              vinification\n              id\n            }\n            winePasspordPDF {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      singleWinePage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            alchohol\n            acid\n            sugars\n            volume\n            closing\n            year\n            bottlesProduced\n            temperature\n            rewardsHeading\n            vinification\n            maturation\n            degustaion\n            food\n            buttonText\n            unit\n          }\n        }\n      }\n    }\n  ": types.VinasDocument,
};

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = gql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function gql(source: string): unknown;

/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query AboutPage($locale: I18NLocaleCode) {\n      aboutPage(locale: $locale) {\n        data {\n          attributes {\n            aboutPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query AboutPage($locale: I18NLocaleCode) {\n      aboutPage(locale: $locale) {\n        data {\n          attributes {\n            aboutPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query B2BPage($locale: I18NLocaleCode) {\n      b2BPage(locale: $locale) {\n        data {\n          attributes {\n            b2bPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on Error {\n                code\n                message\n              }\n            }\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n          }\n        }\n      }\n      contactForm(locale: $locale) {\n        data {\n          attributes {\n            contactNameField\n            companyNameField\n            businessActivity\n            privatePerson\n            company\n            horeca\n            interests\n            whiteWines\n            redWines\n            roseWines\n            collectionWines\n            visits\n            knowledge\n            curentOffering\n            phoneNumber\n            email\n            yes\n            no\n            chooseOption\n            formHeading\n            buttonTextSend\n            thankYouHeading\n            thankYouSubheading\n            thankYouButton\n            locale\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query B2BPage($locale: I18NLocaleCode) {\n      b2BPage(locale: $locale) {\n        data {\n          attributes {\n            b2bPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on Error {\n                code\n                message\n              }\n            }\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n          }\n        }\n      }\n      contactForm(locale: $locale) {\n        data {\n          attributes {\n            contactNameField\n            companyNameField\n            businessActivity\n            privatePerson\n            company\n            horeca\n            interests\n            whiteWines\n            redWines\n            roseWines\n            collectionWines\n            visits\n            knowledge\n            curentOffering\n            phoneNumber\n            email\n            yes\n            no\n            chooseOption\n            formHeading\n            buttonTextSend\n            thankYouHeading\n            thankYouSubheading\n            thankYouButton\n            locale\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query CellerPage($locale: I18NLocaleCode) {\n      cellerPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            cellerPageLayout {\n              __typename\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on ComponentGlobalImage {\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n                id\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query CellerPage($locale: I18NLocaleCode) {\n      cellerPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            cellerPageLayout {\n              __typename\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n              ... on ComponentGlobalImage {\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n                id\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query DiariesCollection($locale: I18NLocaleCode) {\n      diaries(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }    \n\n    }\n  "): (typeof documents)["\n    query DiariesCollection($locale: I18NLocaleCode) {\n      diaries(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }    \n\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query DiariesSingle($filters: DiaryFiltersInput, $locale: I18NLocaleCode) {\n      diaries(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query DiariesSingle($filters: DiaryFiltersInput, $locale: I18NLocaleCode) {\n      diaries(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            gallery {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query ProductFilters($locale: I18NLocaleCode, $pagination: PaginationArg) {\n      products(locale: $locale, pagination: $pagination) {\n        data {\n          attributes {\n            productType {\n              data {\n                attributes {\n                  productType\n                  filterName\n                }\n              }\n            }\n            wine {\n              volume\n              vintage\n              vina {\n                data {\n                  attributes {\n                    wineType {\n                      data {\n                        attributes {\n                          wineType\n                          filterName\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query ProductFilters($locale: I18NLocaleCode, $pagination: PaginationArg) {\n      products(locale: $locale, pagination: $pagination) {\n        data {\n          attributes {\n            productType {\n              data {\n                attributes {\n                  productType\n                  filterName\n                }\n              }\n            }\n            wine {\n              volume\n              vintage\n              vina {\n                data {\n                  attributes {\n                    wineType {\n                      data {\n                        attributes {\n                          wineType\n                          filterName\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query GdprPage($locale: I18NLocaleCode) {\n      gdprPage(locale: $locale) {\n        data {\n          attributes {\n            pageContent\n            pageHeading\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query GdprPage($locale: I18NLocaleCode) {\n      gdprPage(locale: $locale) {\n        data {\n          attributes {\n            pageContent\n            pageHeading\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query HomePage($locale: I18NLocaleCode) {\n      homePage(locale: $locale) {\n        data {\n          attributes {\n            aboutButton\n            aboutImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            aboutText\n            diaryHeading\n            featuredButton\n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n            featuredWines {\n              data {\n                attributes {\n                  name\n                  slug\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                  harvestYear\n                }\n              }\n            }\n            featuredWinesHeading\n            featuredWinesSubheading\n            heroHeading\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            heroSubheading\n            newsHeading\n            imgLink {\n              link\n              text\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n            imgLink2 {\n              text\n              link\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query HomePage($locale: I18NLocaleCode) {\n      homePage(locale: $locale) {\n        data {\n          attributes {\n            aboutButton\n            aboutImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            aboutText\n            diaryHeading\n            featuredButton\n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n            featuredWines {\n              data {\n                attributes {\n                  name\n                  slug\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                  harvestYear\n                }\n              }\n            }\n            featuredWinesHeading\n            featuredWinesSubheading\n            heroHeading\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            heroSubheading\n            newsHeading\n            imgLink {\n              link\n              text\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n            imgLink2 {\n              text\n              link\n              image {\n                data {\n                  attributes {\n                    alternativeText\n                    url\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query Menu($locale: I18NLocaleCode) {\n      menu(locale: $locale) {\n        data {\n          attributes {\n            wineEstate\n            ourWines\n            contactUs\n            aboutUs\n            vinyardLink\n            linkCeller\n            linkVisits\n            linkWhites\n            linkReds\n            linkRoses\n            linkCollections\n            linkB2b\n            linkContact\n            linkPhilosophy\n            linkHistory\n            linkTeam\n            linkDiary\n            linkNews\n            linkGDPR\n            linkPolicy\n            linkVinyard\n          }\n        }\n      }\n      contactPage(locale: $locale) {\n        data {\n          attributes {\n            addressLine1\n            addressLine2\n            addressLine3\n            email\n            phoneNumber\n            heroHeading\n            website\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query Menu($locale: I18NLocaleCode) {\n      menu(locale: $locale) {\n        data {\n          attributes {\n            wineEstate\n            ourWines\n            contactUs\n            aboutUs\n            vinyardLink\n            linkCeller\n            linkVisits\n            linkWhites\n            linkReds\n            linkRoses\n            linkCollections\n            linkB2b\n            linkContact\n            linkPhilosophy\n            linkHistory\n            linkTeam\n            linkDiary\n            linkNews\n            linkGDPR\n            linkPolicy\n            linkVinyard\n          }\n        }\n      }\n      contactPage(locale: $locale) {\n        data {\n          attributes {\n            addressLine1\n            addressLine2\n            addressLine3\n            email\n            phoneNumber\n            heroHeading\n            website\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query NewsCollection($locale: I18NLocaleCode) {\n      news(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query NewsCollection($locale: I18NLocaleCode) {\n      news(locale: $locale) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            diaryHeading\n            featuredDiary {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                  image {\n                    data {\n                      attributes {\n                        alternativeText\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query NewsSingle($locale: I18NLocaleCode, $filters: NewFiltersInput) {\n      news(locale: $locale, filters: $filters) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query NewsSingle($locale: I18NLocaleCode, $filters: NewFiltersInput) {\n      news(locale: $locale, filters: $filters) {\n        data {\n          attributes {\n            content\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            publicationDate\n            slug\n            title\n          }\n        }\n      }\n      homePage(locale: $locale) {\n        data {\n          attributes { \n            newsHeading\n            featuredNews {\n              data {\n                attributes {\n                  title\n                  slug\n                  publicationDate\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query Policy($locale: I18NLocaleCode) {\n      policy(locale: $locale) {\n        data {\n          attributes {\n            pageHeading\n            content\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query Policy($locale: I18NLocaleCode) {\n      policy(locale: $locale) {\n        data {\n          attributes {\n            pageHeading\n            content\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query Product(\n      $locale: I18NLocaleCode\n      $pagination: PaginationArg,\n      $filters: ProductFiltersInput\n    ) {\n      products(locale: $locale, pagination: $pagination, filters: $filters) {\n        data {\n          attributes {\n            packageTitle\n            productType {\n              data {\n                attributes {\n                  productType\n                }\n              }\n            }\n            regularPrice\n            salePrice\n            slug\n            productCode\n            wine {\n              quantity\n              vintage\n              volume\n              vina {\n                data {\n                  attributes {\n                    name\n                    image {\n                      data {\n                        attributes {\n                          alternativeText\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      shopPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n            deliveryInfoButton\n            paymentInfoButton\n            infoTab {\n              tabContent\n              tabHeading\n            }\n            filterWineType\n            filterVintage\n            filterProductType\n            filterVolume\n          }\n        }\n      }\n      productTypes(locale: $locale) {\n        data {\n          attributes {\n            productType\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query Product(\n      $locale: I18NLocaleCode\n      $pagination: PaginationArg,\n      $filters: ProductFiltersInput\n    ) {\n      products(locale: $locale, pagination: $pagination, filters: $filters) {\n        data {\n          attributes {\n            packageTitle\n            productType {\n              data {\n                attributes {\n                  productType\n                }\n              }\n            }\n            regularPrice\n            salePrice\n            slug\n            productCode\n            wine {\n              quantity\n              vintage\n              volume\n              vina {\n                data {\n                  attributes {\n                    name\n                    image {\n                      data {\n                        attributes {\n                          alternativeText\n                          url\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      shopPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            heroImage {\n              data {\n                attributes {\n                  url\n                  alternativeText\n                }\n              }\n            }\n            deliveryInfoButton\n            paymentInfoButton\n            infoTab {\n              tabContent\n              tabHeading\n            }\n            filterWineType\n            filterVintage\n            filterProductType\n            filterVolume\n          }\n        }\n      }\n      productTypes(locale: $locale) {\n        data {\n          attributes {\n            productType\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query VinyardPage($locale: I18NLocaleCode) {\n      vinyardPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            vinyardPageLayout {\n              __typename              \n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query VinyardPage($locale: I18NLocaleCode) {\n      vinyardPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            vinyardPageLayout {\n              __typename              \n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query VisitsPage($locale: I18NLocaleCode) {\n      visitsPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            visitsPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query VisitsPage($locale: I18NLocaleCode) {\n      visitsPage(locale: $locale) {\n        data {\n          attributes {\n            heroImage {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            visitsPageLayout {\n              __typename\n              ... on ComponentGlobalImage {\n                id\n                image {\n                  data {\n                    attributes {\n                      alternativeText\n                      url\n                    }\n                  }\n                }\n                description\n                imageOrientation\n              }\n              ... on ComponentGlobalParagraph {\n                id\n                text\n              }\n              ... on ComponentGlobalTextEditor {\n                id\n                text\n                heading\n              }\n              ... on ComponentGlobalTitleNText {\n                id\n                minorHeading\n                majorHeading\n                text\n                marker\n              }\n            }\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query CollectionPage($locale: I18NLocaleCode, $filters: VinaFiltersInput, $pagination: PaginationArg) {\n      vinas(locale: $locale, filters: $filters, pagination: $pagination) {\n        data {\n          attributes {\n            harvestYear\n            slug\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            shortDescription\n            name\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      winesPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            hideFilters\n            showFilters\n          }\n        }\n      }\n      wineTypes(locale: $locale) {\n        data {\n          attributes {\n            filterName\n            wineType\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query CollectionPage($locale: I18NLocaleCode, $filters: VinaFiltersInput, $pagination: PaginationArg) {\n      vinas(locale: $locale, filters: $filters, pagination: $pagination) {\n        data {\n          attributes {\n            harvestYear\n            slug\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            shortDescription\n            name\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      winesPage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            heroSubheading\n            hideFilters\n            showFilters\n          }\n        }\n      }\n      wineTypes(locale: $locale) {\n        data {\n          attributes {\n            filterName\n            wineType\n          }\n        }\n      }\n    }\n  "];
/**
 * The gql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function gql(source: "\n    query Vinas($filters: VinaFiltersInput, $locale: I18NLocaleCode) {\n      vinas(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            name\n            harvestYear\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            longDescription\n            shortDescription\n            wineAwards {\n              awardDescription\n              year\n              id\n            }\n            wineDetails {\n              acids\n              alchohol\n              closing {\n                data {\n                  attributes {\n                    capType\n                  }\n                }\n              }\n              id\n              sugars\n              temperatureC\n              temperatureF\n              volumeNCount {\n                bottlesProduced\n                volume\n                id\n              }\n              year\n            }\n            wineInformation {\n              degustaion\n              food\n              maturation\n              vinification\n              id\n            }\n            winePasspordPDF {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      singleWinePage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            alchohol\n            acid\n            sugars\n            volume\n            closing\n            year\n            bottlesProduced\n            temperature\n            rewardsHeading\n            vinification\n            maturation\n            degustaion\n            food\n            buttonText\n            unit\n          }\n        }\n      }\n    }\n  "): (typeof documents)["\n    query Vinas($filters: VinaFiltersInput, $locale: I18NLocaleCode) {\n      vinas(filters: $filters, locale: $locale) {\n        data {\n          attributes {\n            name\n            harvestYear\n            image {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            longDescription\n            shortDescription\n            wineAwards {\n              awardDescription\n              year\n              id\n            }\n            wineDetails {\n              acids\n              alchohol\n              closing {\n                data {\n                  attributes {\n                    capType\n                  }\n                }\n              }\n              id\n              sugars\n              temperatureC\n              temperatureF\n              volumeNCount {\n                bottlesProduced\n                volume\n                id\n              }\n              year\n            }\n            wineInformation {\n              degustaion\n              food\n              maturation\n              vinification\n              id\n            }\n            winePasspordPDF {\n              data {\n                attributes {\n                  alternativeText\n                  url\n                }\n              }\n            }\n            wineType {\n              data {\n                attributes {\n                  wineType\n                  filterName\n                }\n              }\n            }\n          }\n        }\n      }\n      singleWinePage(locale: $locale) {\n        data {\n          attributes {\n            heroHeading\n            alchohol\n            acid\n            sugars\n            volume\n            closing\n            year\n            bottlesProduced\n            temperature\n            rewardsHeading\n            vinification\n            maturation\n            degustaion\n            food\n            buttonText\n            unit\n          }\n        }\n      }\n    }\n  "];

export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;